using dotnet_app.Middleware;
using dotnet_app.Services;
using HealthChecks.UI.Client;
using Microsoft.AspNetCore.Diagnostics.HealthChecks;
using Microsoft.Extensions.Diagnostics.HealthChecks;

using Prometheus;

var builder = WebApplication.CreateBuilder(args);

// ????? ???????
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// ????? ???? ????????
builder.Services.AddSingleton<IMetricsService, MetricsService>();

// ????? ?????? ?????
builder.Services.AddHealthChecks()
    .AddCheck("self", () => HealthCheckResult.Healthy("??????? ???? ???? ?????"))
    .AddCheck("database", () =>
    {
        try
        {
            // ??? ??? ??? ??? ????? ???????? ?????? ??
            // ????: using var connection = new SqlConnection(connectionString);
            // connection.Open();
            return HealthCheckResult.Healthy("????? ???????? ?????");
        }
        catch (Exception ex)
        {
            return HealthCheckResult.Unhealthy($"??? ?? ??????? ?????? ????????: {ex.Message}");
        }
    })
    .AddCheck("external_api", () =>
    {
        try
        {
            // ??? ??????? ????????
            return HealthCheckResult.Healthy("??????? ???????? ?????");
        }
        catch (Exception ex)
        {
            return HealthCheckResult.Unhealthy($"??? ?? ??????? ???????? ????????: {ex.Message}");
        }
    });

// ????? ???? ??????? ???? ?????? ??????
builder.Services.AddHostedService<MetricsBackgroundService>();

// ????? CORS ??? ??? ??????
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowPrometheus",
        builder => builder
            .AllowAnyOrigin()
            .AllowAnyMethod()
            .AllowAnyHeader());
});

var app = builder.Build();

// ????? pipeline ???????
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseCors("AllowPrometheus");
app.UseRouting();

// ????? middleware ????? ??????????? ??? middleware ???
app.UseMiddleware<ExceptionMetricsMiddleware>();

// ????? ??? ?????? HTTP ????????
app.UseHttpMetrics();

app.UseAuthorization();

app.MapControllers();

// ???? ??? ?????
app.MapHealthChecks("/health", new HealthCheckOptions()
{
    ResponseWriter = UIResponseWriter.WriteHealthCheckUIResponse
});

// ???? ?????? Prometheus
app.MapMetrics();

// ????? ???? ????? ????????
app.MapGet("/", () => "??????! ??????? ????. ???? ?? /metrics ?? /health");

app.Run();